<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd"
       default-lazy-init="true">
    <!-- MyBatis配置 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:/Configuration.xml"/>
        <property name="mapperLocations" value="classpath:/mapper/**/*Mapper.xml"/>
    </bean>

    <!-- scanner mapper -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="annotationClass" value="org.springframework.stereotype.Repository"/>
        <property name="basePackage" value="com.redcard,com.common.security"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>

    <bean id="mybatisTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <!-- 定义拦截器，用来指定事物属性，级别，和异常处理 -->
    <bean id="mybatisTransactionInterceptor" class="org.springframework.transaction.interceptor.TransactionInterceptor">
        <property name="transactionManager" ref="transactionManager"></property>
        <property name="transactionAttributes">
            <props>
                <!-- PROPAGATION_SUPPORTS: 如果已经存在事务,则加入事务;如果没有事务,则以非事务的方式执行;
           PROPAGATION_MANDATORY: 使用当前事务, 如果没有, 则抛出异常;
           PROPAGATION_REQUIRED: 新建事务,如果当前有事务, 则挂起; P
           ROPAGATION_NOT_SUPPORTED:以非事务的方式执行, 如果当前有事务, 则挂起;
           PROPAGATION_NEVER:以非事务的方式执行, 如果当前有事务,则抛出异常;
           +/-Exception</prop> + 表示异常出现时事物提交 - 表示异常出现时事务回滚 -->
                <prop key="find*">PROPAGATION_SUPPORTS,readOnly</prop>
                <prop key="del*">PROPAGATION_SUPPORTS</prop>
                <prop key="update*">PROPAGATION_REQUIRED</prop>
                <prop key="save*">PROPAGATION_REQUIRED,-Exception</prop>
            </props>
        </property>
    </bean>

    <bean id="BeanProxy" class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
        <property name="beanNames">
            <value>*MybatisManager</value>
        </property>
        <!-- 对代理类进行加载拦截器(实现通知的过程) -->
        <property name="interceptorNames">
            <list>
                <value>mybatisTransactionInterceptor</value>
            </list>
        </property>
    </bean>
</beans>