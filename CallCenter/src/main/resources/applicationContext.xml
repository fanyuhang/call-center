<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd"
       default-lazy-init="true">

    <description>Spring公共配置</description>

    <import resource="mybatis.xml"></import>

    <import resource="velocity.xml"></import>

    <import resource="quartz.xml"></import>

    <import resource="webservice.xml"></import>
    <!-- 使用annotation 自动注册bean, 并保证@Required、@Autowired的属性被注入 -->
    <context:component-scan base-package="com.common">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <context:component-scan base-package="com.redcard">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    <!-- Jpa Entity Manager 配置 -->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="persistenceUnitName" value="defaultPU"/>
        <property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter"/>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.cache.use_query_cache">true</prop>
                <prop key="hibernate.cache.use_second_level_cache">true</prop>
                <prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>
                <prop key=" hibernate.jdbc.batch_size">100</prop>
                <prop key="net.sf.ehcache.configurationResourceName">ehcache/ehcache-hibernate.xml</prop>
                <prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>
                <prop key="hibernate.show_sql">true</prop>
                <!--<prop key="hibernate.format_sql">true</prop>-->
                <!--<prop key="hibernate.use_sql_comments">true</prop>-->
            </props>
        </property>
    </bean>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="hibernateJpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
    <!-- Jpa 事务配置 -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <!-- Spring Data Jpa配置 -->
    <jpa:repositories base-package="com.common.security" transaction-manager-ref="transactionManager"
                      entity-manager-factory-ref="entityManagerFactory"/>
    <jpa:repositories base-package="com.redcard" transaction-manager-ref="transactionManager"
                      entity-manager-factory-ref="entityManagerFactory"/>

    <bean id="quartzTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 使用annotation定义事务 -->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>

    <!-- production/local development环境 -->
    <beans profile="production,development">
        <context:property-placeholder ignore-unresolvable="true"
                                      location="classpath*:/application.properties,
          			  classpath*:/application.local.properties"/>
          			  
		<util:map id="settingsMap" map-class="java.util.HashMap" key-type="java.lang.String" value-type="java.lang.String">
    		<entry key="messageSignFlag" value="${sendMessage.signFlag}" />
    		<entry key="messageEndPointAddress" value="${sendMessage.endpoint.address}" />
    		<entry key="messageAccountName" value="${sendMessage.accountName}" />
    		<entry key="messageAccountPassword" value="${sendMessage.accountPassword}" />
    		<entry key="messageMethodName" value="${sendMessage.methodName}" />
    		<entry key="emailSendAccount" value="${sendEmail.server.username}" />
		</util:map>

        <!-- 数据源配置, 使用应用中的DBCP数据库连接池 -->
        <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
            <!-- Connection Info -->
            <property name="driverClassName" value="${jdbc.driver}"/>
            <property name="url" value="${jdbc.url}"/>
            <property name="username" value="${jdbc.username}"/>
            <property name="password" value="${jdbc.password}"/>

            <!-- Connection Pooling Info -->
            <property name="maxActive" value="${dbcp.maxActive}"/>
            <property name="maxIdle" value="${dbcp.maxIdle}"/>
            <property name="defaultAutoCommit" value="false"/>
            <!-- 连接Idle一个小时后超时 -->
            <property name="timeBetweenEvictionRunsMillis" value="3600000"/>
            <property name="minEvictableIdleTimeMillis" value="3600000"/>
        </bean>
        
        <!-- Spring 邮件服务 -->
		<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
			<property name="defaultEncoding" value="UTF-8" />  
			<property name="host" value="${sendEmail.server.address}"></property>
			<property name="username" value="${sendEmail.server.username}"></property>
			<property name="password" value="${sendEmail.server.password}"></property>
			<property name="javaMailProperties">  
            <props>  
                <prop key="mail.smtp.auth">true</prop>  <!-- 设置认证开关 -->  
                <prop key="mail.debug">true</prop>  <!-- 启动调试开关 -->  
            </props>  
        </property>  
		</bean>
	
    </beans>

    <!-- unit test环境 -->
    <beans profile="test">
        <context:property-placeholder ignore-resource-not-found="true"
                                      location="classpath*:/application.properties,
          			  classpath*:/application.test.properties"/>

        <!-- 嵌入式内存中数据库 -->
        <bean id="dataSource"
              class="org.apache.commons.dbcp.BasicDataSource">
            <property name="driverClassName" value="${jdbc.driver}"/>
            <property name="url" value="${jdbc.url}"/>
            <property name="username" value="${jdbc.username}"/>
            <property name="password" value="${jdbc.password}"/>
            <property name="maxIdle" value="${dbcp.maxIdle}"/>
            <property name="maxActive" value="${dbcp.maxActive}"/>
        </bean>
        <!--

        <jdbc:embedded-database id="dataSource" type="H2">
            <jdbc:script location="classpath:sql/h2/schema.sql"/>
        </jdbc:embedded-database>

        --><!-- 初始化默认数据 -->
        <bean class="org.springside.modules.test.data.DataInitializer" lazy-init="false">
            <property name="dataSource" ref="dataSource"/>
            <property name="dataFile" value="/data/sample-data.xml"/>
        </bean>
      
    </beans>
    
  	
</beans>